{
  "version": 3,
  "sources": ["src/app/models/vocable.model.ts", "src/app/components/vocabulary/add-vocabulary/add-vocabulary.component.ts", "src/app/components/vocabulary/add-vocabulary/add-vocabulary.component.html", "src/app/components/vocabulary/vocabulary-list/vocabulary-list-page.component.ts", "src/app/components/vocabulary/vocabulary-list/vocabulary-list-page.component.html", "src/app/components/vocabulary/vocabulary-tab.routes.ts"],
  "sourcesContent": ["import { PracticeLevel } from './practice-level.model';\n\nexport interface IVocable {\n  id?: number;\n  foreignMeaning: string;\n  nativeMeanings: string[];\n  lastPracticed: number;\n  wasCorrect: boolean;\n  practicedCount: number;\n  correctCount: number;\n  practiceLevel: PracticeLevel;\n  score: number;\n}\n\nexport class Vocable implements IVocable {\n  public id?: number;\n  public foreignMeaning: string;\n  public nativeMeanings: string[];\n  public lastPracticed: number = 0;\n  public wasCorrect: boolean = false;\n  public practicedCount: number = 0;\n  public correctCount: number = 0;\n  public practiceLevel: PracticeLevel = PracticeLevel.NeverKnownOrPracticed;\n  public score: number = 0;\n\n  constructor(foreignMeaning: string, nativeMeanings: string[]) {\n    this.foreignMeaning = foreignMeaning;\n    this.nativeMeanings = nativeMeanings;\n  }\n}\n", "import { Component, OnInit } from '@angular/core';\nimport {\n  ModalController,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButtons,\n  IonButton,\n  IonContent,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonIcon,\n} from '@ionic/angular/standalone';\nimport { IVocable, Vocable } from 'src/app/models/vocable.model';\nimport { VocabularyService } from 'src/app/services/vocabulary.service';\nimport { addIcons } from 'ionicons';\nimport { add } from 'ionicons/icons';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'vt-add-vocabulary',\n  templateUrl: './add-vocabulary.component.html',\n  styleUrls: ['./add-vocabulary.component.scss'],\n  standalone: true,\n  imports: [\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonButtons,\n    IonButton,\n    IonContent,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonInput,\n    FormsModule,\n    IonIcon,\n  ],\n})\nexport class AddVocabularyComponent implements OnInit {\n  vocable?: IVocable;\n\n  isEdit: boolean = false;\n\n  foreignMeaning: string = '';\n\n  nativeMeanings: { value: string }[] = [{ value: '' }];\n\n  constructor(\n    private vocabularyService: VocabularyService,\n    private modalController: ModalController,\n  ) {\n    addIcons({ add });\n  }\n\n  ngOnInit(): void {\n    if (this.vocable) {\n      this.isEdit = true;\n      this.foreignMeaning = this.vocable.foreignMeaning;\n      this.nativeMeanings = this.vocable.nativeMeanings.map((nm) => {\n        return { value: nm };\n      });\n    }\n  }\n\n  async addNativeMeaning() {\n    this.nativeMeanings.push({ value: '' });\n    let textField: HTMLElement | null = null;\n    let i = 0;\n    while (textField == null && i < 10) {\n      await new Promise((resolve) => setTimeout(resolve, 10));\n      textField = document.getElementById('nativeMeaning' + (this.nativeMeanings.length - 1));\n      i++;\n    }\n    textField?.focus();\n  }\n\n  cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  save(): void {\n    const foreignMeaning = this.foreignMeaning.trim();\n    const nativeMeanings = this.nativeMeanings.map((nm) => nm.value.trim()).filter((value) => value !== '');\n    if (foreignMeaning !== '' && nativeMeanings.length >= 1) {\n      if (this.vocable) {\n        this.vocable.foreignMeaning = foreignMeaning;\n        this.vocable.nativeMeanings = nativeMeanings;\n        this.vocabularyService.update(this.vocable);\n        this.modalController.dismiss();\n      } else {\n        this.vocabularyService.add(new Vocable(foreignMeaning, nativeMeanings));\n        this.modalController.dismiss();\n      }\n    }\n  }\n}\n", "<ion-header translucent>\n  <ion-toolbar>\n    <ion-title style=\"text-align: center\">{{ isEdit ? 'Edit Vocable' : 'Add Vocable' }}</ion-title>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"cancel()\">Cancel</ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"save()\">Save</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <br />\n  <ion-list>\n    <ion-item>\n      <ion-label position=\"stacked\">Foreign meaning</ion-label>\n      <ion-input id=\"foreignMeaning\" [(ngModel)]=\"foreignMeaning\" autocorrect=\"true\"> </ion-input>\n    </ion-item>\n    <br />\n    <ion-item>\n      <ion-label position=\"stacked\">Native meanings</ion-label>\n      <ion-input [(ngModel)]=\"nativeMeanings[0].value\" autocorrect=\"true\"></ion-input>\n    </ion-item>\n    @for (nativeMeaning of nativeMeanings.slice(1); track nativeMeaning.value; let i = $index) {\n      <ion-item id=\"nativeMeaning{{ i }}\">\n        <ion-input [(ngModel)]=\"nativeMeaning.value\" autocorrect=\"true\"></ion-input>\n      </ion-item>\n    }\n    <br />\n    <ion-item lines=\"none\">\n      <ion-button slot=\"end\" style=\"width: 32px; height: 32px\" (click)=\"addNativeMeaning()\">\n        <ion-icon icon=\"Add\"></ion-icon>\n      </ion-button>\n    </ion-item>\n  </ion-list>\n</ion-content>\n", "import { Component, OnInit } from '@angular/core';\nimport {\n  ModalController,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonButtons,\n  IonButton,\n  IonIcon,\n  IonContent,\n  IonSearchbar,\n  IonList,\n  IonItemSliding,\n  IonItem,\n  IonLabel,\n  IonItemOptions,\n  IonItemOption,\n  IonInfiniteScroll,\n  IonRow,\n  IonInfiniteScrollContent,\n} from '@ionic/angular/standalone';\nimport { addIcons } from 'ionicons';\nimport {\n  add,\n  checkmarkOutline,\n  rocketOutline,\n  schoolOutline,\n  trash,\n  trendingUpOutline,\n  trophyOutline,\n} from 'ionicons/icons';\nimport { NgEventBus } from 'ng-event-bus';\nimport { PracticeLevel } from 'src/app/models/practice-level.model';\nimport { ThemeService } from 'src/app/services/theme.service';\nimport { VocabularyAddedEvent } from '../../../events/vocabulary-added.event';\nimport { VocabularyImportedEvent } from '../../../events/vocabulary-imported.event';\nimport { VocabularyUpdatedEvent } from '../../../events/vocabulary-updated.event';\nimport { IVocable } from '../../../models/vocable.model';\nimport { VocabularyService } from '../../../services/vocabulary.service';\nimport { AddVocabularyComponent } from '../add-vocabulary/add-vocabulary.component';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'vt-vocabulary-list-page',\n  templateUrl: './vocabulary-list-page.component.html',\n  styleUrl: './vocabulary-list-page.component.scss',\n  standalone: true,\n  imports: [\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonButtons,\n    IonButton,\n    IonIcon,\n    IonContent,\n    IonSearchbar,\n    IonList,\n    IonItemSliding,\n    IonItem,\n    IonLabel,\n    IonItemOptions,\n    IonItemOption,\n    IonInfiniteScroll,\n    IonRow,\n    IonInfiniteScrollContent,\n  ],\n})\nexport class VocabularyListPageComponent implements OnInit {\n  private static readonly BATCH_SIZE: number = 20;\n\n  searchQuery: string = '';\n\n  vocabulary: IVocable[] = [];\n\n  showPracticeLevel: boolean = false;\n\n  canLoadMore: boolean = false;\n\n  private offset: number = 0;\n\n  constructor(\n    private readonly vocabularyService: VocabularyService,\n    private readonly eventBus: NgEventBus,\n    private readonly modalController: ModalController,\n    private readonly themeService: ThemeService,\n    private readonly settingsService: SettingsService,\n  ) {\n    this.eventBus.on(VocabularyAddedEvent.ID).subscribe(async () => {\n      this.offset = 0;\n      this.vocabulary = [];\n      await this.loadVocabulary();\n    });\n    this.eventBus.on(VocabularyUpdatedEvent.ID).subscribe(async () => {\n      this.offset = 0;\n      this.vocabulary = [];\n      await this.loadVocabulary();\n    });\n    this.eventBus.on(VocabularyImportedEvent.ID).subscribe(async () => {\n      this.offset = 0;\n      this.vocabulary = [];\n      await this.loadVocabulary();\n    });\n\n    addIcons({\n      add,\n      trash,\n      schoolOutline,\n      trendingUpOutline,\n      checkmarkOutline,\n      trophyOutline,\n      rocketOutline,\n    });\n  }\n\n  async ngOnInit() {\n    await this.loadVocabulary();\n  }\n\n  ionViewWillEnter() {\n    this.themeService.overwriteStatusBarColor('#ffffff');\n    this.showPracticeLevel = this.settingsService.getShowPracticeLevelInVocabularyList();\n  }\n\n  async search(event: { detail: { value?: string } }) {\n    console.log(event.detail.value);\n    this.searchQuery = event.detail.value;\n    if (!this.searchQuery) {\n      this.offset = 0;\n      this.vocabulary = [];\n      await this.loadVocabulary();\n    } else {\n      this.vocabulary = await this.vocabularyService.search(this.searchQuery, VocabularyListPageComponent.BATCH_SIZE);\n      this.canLoadMore = false;\n    }\n  }\n\n  async loadMore(event: { target: { complete: () => void } }) {\n    await this.loadVocabulary();\n    event.target.complete();\n  }\n\n  async deleteVocable(vocable: IVocable) {\n    await this.vocabularyService.delete(vocable);\n    this.vocabulary = this.vocabulary.filter((element) => element != vocable);\n  }\n\n  async editVocable(vocable: IVocable) {\n    this.openAddVocabularyComponent({ vocable: vocable });\n  }\n\n  async addVocable() {\n    this.openAddVocabularyComponent();\n  }\n\n  toIcon(vocable: IVocable) {\n    switch (vocable.practiceLevel) {\n      case PracticeLevel.NeverKnownOrPracticed:\n        return 'rocket-outline';\n      case PracticeLevel.AtLeastOnceKnown:\n        return 'school-outline';\n      case PracticeLevel.OnTheRightTrack:\n        return 'trending-up-outline';\n      case PracticeLevel.Good:\n        return 'checkmark-outline';\n      case PracticeLevel.VeryGood:\n        return 'trophy-outline';\n    }\n  }\n\n  toColor(vocable: IVocable) {\n    switch (vocable.practiceLevel) {\n      case PracticeLevel.NeverKnownOrPracticed:\n        return 'var(--ion-color-medium)';\n      case PracticeLevel.AtLeastOnceKnown:\n        return 'var(--ion-color-warning)';\n      case PracticeLevel.OnTheRightTrack:\n        return 'var(--ion-color-tertiary)';\n      case PracticeLevel.Good:\n        return 'var(--ion-color-success)';\n      case PracticeLevel.VeryGood:\n        return 'var(--ion-color-success)';\n    }\n  }\n\n  private async openAddVocabularyComponent(componentProps = {}) {\n    const modal = await this.modalController.create({\n      component: AddVocabularyComponent,\n      presentingElement: document.querySelector('ion-router-outlet'),\n      componentProps: componentProps,\n    });\n    modal.onWillDismiss().then(() => {\n      this.themeService.overwriteStatusBarColor('#ffffff');\n    });\n    this.themeService.overwriteStatusBarColor('#000000');\n    modal.present();\n  }\n\n  private async loadVocabulary() {\n    const result = await this.vocabularyService.load(this.offset, VocabularyListPageComponent.BATCH_SIZE);\n    this.offset += VocabularyListPageComponent.BATCH_SIZE;\n    this.vocabulary = this.vocabulary.concat(result);\n    this.canLoadMore = result.length != 0;\n  }\n}\n", "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Vocabulary</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"addVocable()\">\n        <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Vocabulary</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <div class=\"voc-content\">\n    <ion-searchbar debounce=\"200\" (ionInput)=\"search($event)\"></ion-searchbar>\n\n    <ion-list>\n      @for (vocable of vocabulary; track vocable.id) {\n        <ion-item-sliding>\n          <ion-item (click)=\"editVocable(vocable)\">\n            <ion-label>\n              <h2>{{ vocable.foreignMeaning }}</h2>\n              <p>{{ vocable.nativeMeanings.join(', ') }}</p>\n            </ion-label>\n            @if (showPracticeLevel) {\n              <ion-icon slot=\"start\" size=\"small\" [name]=\"toIcon(vocable)\" [style]=\"{ color: toColor(vocable) }\" />\n            }\n          </ion-item>\n          <ion-item-options side=\"end\">\n            <ion-item-option color=\"danger\" (click)=\"deleteVocable(vocable)\">\n              <ion-icon slot=\"start\" name=\"trash\"></ion-icon>Delete\n            </ion-item-option>\n          </ion-item-options>\n        </ion-item-sliding>\n      }\n    </ion-list>\n    <ion-infinite-scroll threshold=\"100px\" disabled=\"{{ !canLoadMore }}\" (ionInfinite)=\"loadMore($event)\">\n      <ion-row style=\"height: 8px\"></ion-row>\n      <ion-infinite-scroll-content loadingSpinner=\"bubbles\" loadingText=\"Loading more...\">\n      </ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n  </div>\n</ion-content>\n", "import { Routes } from '@angular/router';\nimport { VocabularyListPageComponent } from './vocabulary-list/vocabulary-list-page.component';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: VocabularyListPageComponent,\n  },\n];\n"],
  "mappings": "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",
  "names": ["_forTrack0"]
}
