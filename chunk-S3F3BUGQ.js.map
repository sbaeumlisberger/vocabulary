{
  "version": 3,
  "sources": ["src/app/models/theme.model.ts", "src/app/services/theme.service.ts"],
  "sourcesContent": ["export enum Theme {\n  System = 'System',\n  Light = 'Light',\n  Dark = 'Dark',\n}\n", "import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Config } from '@ionic/angular/standalone';\nimport { Theme } from '../models/theme.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private static readonly THEME_STORAGE_KEY = 'theme';\n\n  private renderer: Renderer2;\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    private meta: Meta,\n    private config: Config,\n  ) {\n    // Create new renderer from renderFactory, to make it possible to use renderer2 in a service\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  initialize() {\n    this.applyTheme(this.getTheme());\n\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (event) => {\n      if (this.getTheme() === Theme.System) {\n        if (event.matches) {\n          this.applyTheme(Theme.Dark);\n        } else {\n          this.applyTheme(Theme.Light);\n        }\n      }\n    });\n  }\n\n  getTheme() {\n    return (localStorage.getItem(ThemeService.THEME_STORAGE_KEY) as Theme) ?? Theme.System;\n  }\n\n  changeTheme(theme: Theme) {\n    localStorage.setItem(ThemeService.THEME_STORAGE_KEY, theme);\n    this.applyTheme(theme);\n  }\n\n  overwriteStatusBarColor(colorLight: string, colorDark: string = '#000000') {\n    if (this.config.get('mode') == 'ios') {\n      if (this.toFinalTheme(this.getTheme()) === Theme.Light) {\n        this.meta.updateTag({ name: 'theme-color', content: colorLight });\n      } else {\n        this.meta.updateTag({ name: 'theme-color', content: colorDark });\n      }\n    }\n  }\n\n  private applyTheme(theme: Theme) {\n    const finalTheme = this.toFinalTheme(theme);\n\n    if (finalTheme == Theme.Dark) {\n      this.renderer.addClass(document.documentElement, 'ion-palette-dark');\n      this.renderer.removeClass(document.body, 'light');\n      this.renderer.addClass(document.body, 'dark');\n    } else {\n      this.renderer.removeClass(document.documentElement, 'ion-palette-dark');\n      this.renderer.removeClass(document.body, 'dark');\n      this.renderer.addClass(document.body, 'light');\n    }\n\n    if (this.config.get('mode') == 'md') {\n      this.meta.updateTag({ name: 'theme-color', content: '#1976d2' });\n    } else {\n      if (finalTheme == Theme.Dark) {\n        this.meta.updateTag({ name: 'theme-color', content: '#000000' });\n      } else {\n        this.meta.updateTag({ name: 'theme-color', content: '#ffffff' });\n      }\n    }\n  }\n\n  private toFinalTheme(theme: Theme) {\n    if (theme === Theme.System) {\n      return this.detectSystemTheme();\n    } else {\n      return theme;\n    }\n  }\n\n  private detectSystemTheme(): Theme {\n    // Detect if prefers-color-scheme is supported\n    if (window.matchMedia('(prefers-color-scheme)').media !== 'not all') {\n      // Set theme to dark if prefers-color-scheme is dark. Otherwise set to light.\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? Theme.Dark : Theme.Light;\n    }\n    // If the browser doesn't support prefers-color-scheme, the light theme is used\n    return Theme.Light;\n  }\n}\n"],
  "mappings": ";;;;;;;;;AAAA,IAAY;CAAZ,SAAYA,QAAK;AACf,EAAAA,OAAA,QAAA,IAAA;AACA,EAAAA,OAAA,OAAA,IAAA;AACA,EAAAA,OAAA,MAAA,IAAA;AACF,GAJY,UAAA,QAAK,CAAA,EAAA;;;ACQX,IAAO,eAAP,MAAO,cAAY;;AACC,SAAA,oBAAoB;EAAQ;EAIpD,YACE,iBACQ,MACA,QAAc;AADd,SAAA,OAAA;AACA,SAAA,SAAA;AAGR,SAAK,WAAW,gBAAgB,eAAe,MAAM,IAAI;EAC3D;EAEA,aAAU;AACR,SAAK,WAAW,KAAK,SAAQ,CAAE;AAE/B,WAAO,WAAW,8BAA8B,EAAE,iBAAiB,UAAU,CAAC,UAAS;AACrF,UAAI,KAAK,SAAQ,MAAO,MAAM,QAAQ;AACpC,YAAI,MAAM,SAAS;AACjB,eAAK,WAAW,MAAM,IAAI;QAC5B,OAAO;AACL,eAAK,WAAW,MAAM,KAAK;QAC7B;MACF;IACF,CAAC;EACH;EAEA,WAAQ;AACN,WAAQ,aAAa,QAAQ,cAAa,iBAAiB,KAAe,MAAM;EAClF;EAEA,YAAY,OAAY;AACtB,iBAAa,QAAQ,cAAa,mBAAmB,KAAK;AAC1D,SAAK,WAAW,KAAK;EACvB;EAEA,wBAAwB,YAAoB,YAAoB,WAAS;AACvE,QAAI,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO;AACpC,UAAI,KAAK,aAAa,KAAK,SAAQ,CAAE,MAAM,MAAM,OAAO;AACtD,aAAK,KAAK,UAAU,EAAE,MAAM,eAAe,SAAS,WAAU,CAAE;MAClE,OAAO;AACL,aAAK,KAAK,UAAU,EAAE,MAAM,eAAe,SAAS,UAAS,CAAE;MACjE;IACF;EACF;EAEQ,WAAW,OAAY;AAC7B,UAAM,aAAa,KAAK,aAAa,KAAK;AAE1C,QAAI,cAAc,MAAM,MAAM;AAC5B,WAAK,SAAS,SAAS,SAAS,iBAAiB,kBAAkB;AACnE,WAAK,SAAS,YAAY,SAAS,MAAM,OAAO;AAChD,WAAK,SAAS,SAAS,SAAS,MAAM,MAAM;IAC9C,OAAO;AACL,WAAK,SAAS,YAAY,SAAS,iBAAiB,kBAAkB;AACtE,WAAK,SAAS,YAAY,SAAS,MAAM,MAAM;AAC/C,WAAK,SAAS,SAAS,SAAS,MAAM,OAAO;IAC/C;AAEA,QAAI,KAAK,OAAO,IAAI,MAAM,KAAK,MAAM;AACnC,WAAK,KAAK,UAAU,EAAE,MAAM,eAAe,SAAS,UAAS,CAAE;IACjE,OAAO;AACL,UAAI,cAAc,MAAM,MAAM;AAC5B,aAAK,KAAK,UAAU,EAAE,MAAM,eAAe,SAAS,UAAS,CAAE;MACjE,OAAO;AACL,aAAK,KAAK,UAAU,EAAE,MAAM,eAAe,SAAS,UAAS,CAAE;MACjE;IACF;EACF;EAEQ,aAAa,OAAY;AAC/B,QAAI,UAAU,MAAM,QAAQ;AAC1B,aAAO,KAAK,kBAAiB;IAC/B,OAAO;AACL,aAAO;IACT;EACF;EAEQ,oBAAiB;AAEvB,QAAI,OAAO,WAAW,wBAAwB,EAAE,UAAU,WAAW;AAEnE,aAAO,OAAO,WAAW,8BAA8B,EAAE,UAAU,MAAM,OAAO,MAAM;IACxF;AAEA,WAAO,MAAM;EACf;;;uCAvFW,eAAY,mBAAA,gBAAA,GAAA,mBAAA,IAAA,GAAA,mBAAA,MAAA,CAAA;IAAA;EAAA;;4EAAZ,eAAY,SAAZ,cAAY,WAAA,YAFX,OAAM,CAAA;EAAA;;",
  "names": ["Theme"]
}
